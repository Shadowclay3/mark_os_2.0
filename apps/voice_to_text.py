import speech_recognition as sr
import subprocess, requests, os, telebot, json

def audio_to_text(dest_name: str):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∞—É–¥–∏–æ, –≤ —Ñ–æ—Ä–º–∞—Ç–µ ".vaw" –≤ —Ç–µ–∫—Å—Ç
    r = sr.Recognizer() # —Ç–∞–∫–æ–µ –≤–æ–æ–±—â–µ –Ω–∞–¥–æ –∫–æ–º–º–µ–Ω—Ç–∏—Ç—å?
    # —Ç—É—Ç –º—ã —á–∏—Ç–∞–µ–º –Ω–∞—à .vaw —Ñ–∞–π–ª
    message = sr.AudioFile(dest_name)
    with message as source:
        audio = r.record(source)
    result = r.recognize_google(audio, language="uk_UK") # –∏—Å–ø–æ–ª—å–∑—É—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ç–µ–∫—Å—Ç, —Ç–∞–∫ –∂–µ —Ç—É—Ç –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å —è–∑—ã–∫ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
    return result

def voice_to_text(message, token):
    try:
        bot = telebot.TeleBot(token)
        file_info = bot.get_file(message.voice.file_id)
        path = file_info.file_path
        fname = os.path.basename(path)
        doc = requests.get('https://api.telegram.org/file/bot{0}/{1}'.format(token, file_info.file_path))
        with open(fname+'.oga', 'wb') as f:
            f.write(doc.content)
        process = subprocess.run(['ffmpeg', '-i', fname+'.oga', fname+'.wav'])
        result = audio_to_text(fname+'.wav')
        text_voice = format(result)
        status = True
    except sr.UnknownValueError as e:
        status = False
        # –û—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å. –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –æ—Ç—Å—ã–ª–∞–µ—Ç—Å—è –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –∑–∞–Ω–æ—Å–∏–º –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥ –æ—à–∏–±–æ–∫
        text_voice =  "–ü–µ—Ä–µ–ø—Ä–æ—à—É—é, –∞–ª–µ —è –Ω–µ —Ä–æ–∑—ñ–±—Ä–∞–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –∞–±–æ –≤–æ–Ω–æ –ø—É—Å—Ç–µ..."
    except Exception as e:
        status = False
        # –í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –æ—à–∏–±–∫–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –∑–∞–Ω–æ—Å–∏—Ç—Å—è –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥ –æ—à–∏–±–æ–∫
        text_voice = "–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫, –∞–ª–µ –Ω–∞—à—ñ —Å–º—ñ–ª–∏–≤—ñ –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç–∏ –≤–∂–µ –ø—Ä–∞—Ü—é—é—Ç—å –Ω–∞–¥ —Ä—ñ—à–µ–Ω–Ω—è–º... \n\n–¢–∞ –ª–∞–Ω, –Ω—ñ—Ö—Ç–æ —Ü—é –ø–æ–º–∏–ª–∫—É –≤–∏–ø—Ä–∞–≤–ª—è—Ç–∏ –Ω–µ –±—É–¥–µ, –≤–æ–Ω–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–≥—É–±–∏—Ç—å—Å—è –≤ –ª–æ–≥–∞—Ö."
    finally:
        # –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ —É–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        try: os.remove(fname+'.wav')
        except: pass
        try: os.remove(fname+'.oga')
        except: pass
    return text_voice, status

def start(user_id):
    default_config = \
{
    "text": "midjourney",
    "photo": "None",
    "video": "None",
    "voice": "None",
}
    try:
        with open(f"user_config/user_{user_id}.json", 'r', encoding='utf-8') as file:
            data = json.load(file)
            if not data:
                data = default_config
    except FileNotFoundError:
        data = default_config
    if not data:
        os.makedirs(os.path.dirname(f"user_config/user_{user_id}.json"), exist_ok=True)
        with open(f"user_config/user_{user_id}.json", 'w', encoding='utf-8') as file:
            json.dump(data, file)
    from telebot import types
    reply_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_1 = types.KeyboardButton(text=" ")
    button_2 = types.KeyboardButton(text="‚èπ")
    button_3 = types.KeyboardButton(text=" ")
    reply_markup.add(button_1, button_2, button_3)
    stroka_sostoyaniya = "*–≥–æ–ª–æ—Å–æ–≤–µ üîÑ —Ç–µ–∫—Å—Ç:*"
    return stroka_sostoyaniya, reply_markup