import telebot, json, random, uuid, requests, os


token = "6907078461:AAHq17UhG4JoKyjJTDyQZYPgYG2obUts1Ek"

bot = telebot.TeleBot(token)

def json_data(file_name: str):
    with open(file_name, "r", encoding="utf-8") as f:
        return json.load(f)

def write_json_data(file_name: str, data: dict):
    with open(file_name, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

def name_team(message):
    if message.text is None or not message.text.strip():  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_message(message.chat.id, "–ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞–∑–≤—É –∫–æ–º–∞–Ω–¥–∏ —Ç–µ–∫—Å—Ç–æ–º)")
        return

    global team_name
    team_name = message.text
    msg = bot.send_message(message.chat.id, "–ù–∞–ø–∏—à—ñ—Ç—å —Ö—Ç–æ —î –≤ –∫–æ–º–∞–Ω–¥—ñ) –ø–∏—à—ñ—Ç—å —á–µ—Ä–µ–∑ –∫–æ–º—É")
    bot.register_next_step_handler(msg, team_members)

def team_members(message):
    if message.text is None or not message.text.strip():  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_message(message.chat.id, "–ù–∞–ø–∏—à—ñ—Ç—å —Ç–µ–∫—Å—Ç–æ–º —Ö—Ç–æ —î –≤ –∫–æ–º–∞–Ω–¥—ñ) –ø–∏—à—ñ—Ç—å —á–µ—Ä–µ–∑ –∫–æ–º—É")
        return
    text = message.text
    text = text.replace(", ", ",")
    participants = text.split(',')

    data = {
        "name": team_name,
        "creator_user": creator_user,
        "participants": participants,
        "bonus": False,
        "bonus_photo": ""
        }

    _data = json_data("data_konkurs.json")

    _data["commands"].append(data)

    write_json_data("data_konkurs.json", _data)

    bot.send_message(message.chat.id, "–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–∞)")

def get_photo(message):
    succes = True
    user = message.from_user
    user_id = user.id
    if message.content_type == 'photo':
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ
        file_id = message.photo[-1].file_id
        file_info = bot.get_file(file_id)
        file_path = file_info.file_path
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .jpg
        random_filename = str(uuid.uuid4()) + ".jpg"

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ
        file_url = f"https://api.telegram.org/file/bot{token}/{file_path}"
        response = requests.get(file_url)
        with open(random_filename, 'wb') as file:
            file.write(response.content)
            markup = telebot.types.InlineKeyboardMarkup()
            yes = telebot.types.InlineKeyboardButton(text="–ü—Ä–∏–π–Ω—è—Ç–∏ ‚úÖ", callback_data=f"yes_{user_id}_{random_filename}")
            no = telebot.types.InlineKeyboardButton(text="–í—ñ–¥—Ö–∏–ª–∏—Ç–∏ ‚ùå", callback_data=f"not_{user_id}_{random_filename}")
            markup.add(yes,no)
            with open(random_filename, 'rb') as photo:
                bot.send_photo(1004574223, photo, caption=user, reply_markup=markup)

        # –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é photo_base64 –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    elif message.content_type == 'document':
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –¥–æ–∫—É–º–µ–Ω—Ç, –ø—Ä–æ–≤–µ—Ä–∏–º –µ–≥–æ —Ç–∏–ø
        if message.document.file_name.lower().endswith(('.png', '.jpg', '.jpeg')):
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ
            file_id = message.document.file_id
            file_info = bot.get_file(file_id)
            file_path = file_info.file_path
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ç–µ–º –∂–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º, —á—Ç–æ –∏ —É –¥–æ–∫—É–º–µ–Ω—Ç–∞
            file_extension = message.document.file_name.split('.')[-1]
            random_filename = str(uuid.uuid4()) + "." + file_extension

            # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
            file_url = f"https://api.telegram.org/file/bot{token}/{file_path}"
            response = requests.get(file_url)
            with open(random_filename, 'wb') as file:
                file.write(response.content)
                markup = telebot.types.InlineKeyboardMarkup()
                yes = telebot.types.InlineKeyboardButton(text="–ü—Ä–∏–π–Ω—è—Ç–∏ ‚úÖ", callback_data=f"yes_{user_id}_{random_filename}")
                no = telebot.types.InlineKeyboardButton(text="–í—ñ–¥—Ö–∏–ª–∏—Ç–∏ ‚ùå", callback_data=f"not_{user_id}_{random_filename}")
                markup.add(yes,no)
                with open(random_filename, 'rb') as photo:
                    bot.send_photo(1004574223, photo, caption=user, reply_markup=markup)

        else:
            # –≠—Ç–æ —Ñ–∞–π–ª, –Ω–æ –Ω–µ —Ñ–æ—Ç–æ
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ, –∞ –Ω–µ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–π —Ñ–∞–π–ª.")
            False
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —á—Ç–æ-—Ç–æ, —á—Ç–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ–æ—Ç–æ
        # –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ. –î—Ä—É–≥–∏–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è.")
        False

    if succes:
        bot.send_message(message.chat.id, "–§–æ—Ç–æ –≤—ñ–¥–≤—à–ª–µ–Ω–æ –æ—á—ñ–∫—É–π—Ç–µ)")

@bot.message_handler(commands=['start'])
def command_start(message):
    user = message.from_user
    user_id = user.id
    first_name = user.first_name
    last_name = user.last_name
    username = user.username

    global creator_user
    data = json_data("data_konkurs.json")

    creator_user = {
        "id": user_id,
        "first_name": first_name,
        "last_name": last_name,
        "username": username
    }

    user_exists = False
    for user in data["all_users"]:
        if user.get("id") == user_id:
            user_exists = True
            break

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    if not user_exists:
        data["all_users"].append(creator_user)
    write_json_data("data_konkurs.json", data)
    bot.send_message(message.chat.id, f"<b>–ü—Ä–∏–≤—ñ—Ç {message.from_user.first_name}</b>\n\n–Ø —Ä–∞–¥–∏–π —Ç–µ–±–µ –±–∞—á–∏—Ç–∏ –Ω–∞ –ö–æ–Ω–∫—É—Ä—Å—ñ <b>—Ç—É—Ç –Ω–∞–∑–≤–∞</b>\n–ì–ª—è–Ω—å –Ω–∞ –∫–æ–º–∞–Ω–¥–∏ –≤ –º–µ–Ω—é —è–∫—à–æ —à–æ—Å—å —Ç—Ä–∞–ø–∏–ª–æ—Å—å —Ç–æ —Ç–æ –Ω–∞–ø–∏—à–∏ –π–æ–º—É @marklanselot", parse_mode="HTML")

@bot.message_handler(commands=['new_team'])
def command_new_team(message):
    user = message.from_user
    data = json_data("data_konkurs.json")
    user_id = user.id
    first_name = user.first_name
    last_name = user.last_name
    username = user.username
    global creator_user
    creator_user = {
        "id": user_id,
        "first_name": first_name,
        "last_name": last_name,
        "username": username
    }

    user_exists = False
    for user in data["all_users"]:
        if user.get("id") == user_id:
            user_exists = True
            break

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    if not user_exists:
        data["all_users"].append(creator_user)
    write_json_data("data_konkurs.json", data)
    data = json_data("data_konkurs.json")




    user_has_created_command = False
    for command in data["commands"]:
        creator_id = command["creator_user"]["id"]
        if creator_id == user_id:
            user_has_created_command = True
            break
    if user_has_created_command:
        bot.send_message(message.chat.id, "–ù–∞–∂–∞–ª—å –≤–∏ –≤–∂–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É —Ç–æ–º—É –Ω–µ –º–æ–∂–µ—Ç–µ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —â–µ –æ–¥–Ω—É(")
        return



    msg = bot.send_message(message.chat.id, "–ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞–∑–≤—É –∫–æ–º–∞–Ω–¥–∏)")
    bot.register_next_step_handler(msg, name_team)

@bot.message_handler(commands=['teams'])
def command_teams(message):
    user = message.from_user
    user_id = user.id
    first_name = user.first_name
    last_name = user.last_name
    username = user.username

    global creator_user
    data = json_data("data_konkurs.json")

    creator_user = {
        "id": user_id,
        "first_name": first_name,
        "last_name": last_name,
        "username": username
    }

    user_exists = False
    for user in data["all_users"]:
        if user.get("id") == user_id:
            user_exists = True
            break

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    if not user_exists:
        data["all_users"].append(creator_user)
    write_json_data("data_konkurs.json", data)
    data = json_data("data_konkurs.json")


    commands = data['commands']
    if not commands:
        bot.send_message(message.chat.id, f"–ù–∞–∂–∞–ª—å –ø–æ–∫–∏—à–æ –Ω—ñ—Ö—Ç–æ –Ω–µ —Å—Ç–≤–æ—Ä–∏–≤ –∫–æ–º–∞–Ω–¥–∏ –∞–ª–µ —Ç–∏ –º–æ–∂–µ—à —Å—Ç–∞—Ç–∏ –ø–µ—Ä—à–∏–º)", parse_mode="HTML")
    else:
        markup = telebot.types.InlineKeyboardMarkup()
        comand_b = telebot.types.InlineKeyboardButton(text="üìú –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: üìú", callback_data=" ")
        markup.add(comand_b)
        i = 0
        for team in commands:
            i += 1
            name = team['name']
            comand_b = telebot.types.InlineKeyboardButton(text=f"{i}: {name}", callback_data=f"team_info_{name}")
            markup.add(comand_b)

        bot.send_message(message.chat.id, f"–û—Å—å —è–∫—ñ –∫–æ–º–∞–Ω–¥–∏ –≤–∂–µ —î (–Ω–∞—Ç–∏—Å–Ω–∏ —â–æ–± –ø–æ–¥–∏–≤–∏—Ç–∏—Å—è –ø–æ–¥—Ä–æ–±–∏—Ü—ñ)", parse_mode="HTML", reply_markup=markup)

@bot.message_handler(commands=['get_bonus'])
def command_get_bonus(message):
    user = message.from_user
    data = json_data("data_konkurs.json")
    user_id = user.id
    first_name = user.first_name
    last_name = user.last_name
    username = user.username
    global creator_user
    creator_user = {
        "id": user_id,
        "first_name": first_name,
        "last_name": last_name,
        "username": username
    }

    user_exists = False
    for user in data["all_users"]:
        if user.get("id") == user_id:
            user_exists = True
            break

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    if not user_exists:
        data["all_users"].append(creator_user)
    write_json_data("data_konkurs.json", data)
    data = json_data("data_konkurs.json")




    user_has_created_command = True
    for command in data["commands"]:
        creator_id = command["creator_user"]["id"]
        if creator_id == user_id:
            user_has_created_command = False
            break

    team = True
    if user_has_created_command:
        bot.send_message(message.chat.id, "–ù–∞–∂–∞–ª—å –≤–∏ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É(")
        team = False
    else:
        if command['bonus']:
            bot.send_message(message.chat.id, "–í–∏ –≤–∂–µ –æ—Ç—Ä–∏–º–∞–ª–∏ –±–æ–Ω—É—Å)")
            team = False

    if team:
        emoji_list = ["üõ§", "üõ£", "üóæ", "üéë", "üèû", "üåÜ", "üåá", "üéÜ", "üéá", "üå†", "üåÑ", "üåÖ", "üèô", "üåÉ", "üåå", "üåâ", "üåÅ"]

        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π emoji
        random_emoji = random.choice(emoji_list)
        bot.send_message(message.chat.id, random_emoji)
        msg = bot.send_message(message.chat.id, f"–ü—Ä–∏—à–ª—ñ—Ç—å –º–µ–Ω—ñ —Ñ–æ—Ç–æ—á–∫—É)")
        bot.register_next_step_handler(msg, get_photo)

@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    if "team_info_" in call.data:
        string = call.data
        prefix = "team_info_"
        name = string[len(prefix):]

        # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –æ–±—ä–µ–∫—Ç–∞–º –≤ —Å–ø–∏—Å–∫–µ –∏ –∏—â–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        data = None
        data = json_data("data_konkurs.json")
        for command in data['commands']:
            if 'name' in command and command['name'] == name:
                data = command
                break
        if data:
            markup = telebot.types.InlineKeyboardMarkup()
            name_command = telebot.types.InlineKeyboardButton(text='–ù–∞–∑–≤–∞: ' + data['name'], callback_data=" ")
            creator_user = telebot.types.InlineKeyboardButton(text='–°—Ç–≤–æ—Ä–∏–≤: "' + data['creator_user']['first_name'] + '"', callback_data=" ")
            bonus = data['bonus']
            if bonus: bonus = "–û—Ç—Ä–∏–º–∞–ª–∏ –±–æ–Ω—É—Å ‚úÖ"
            else: bonus = "–ù–µ –æ—Ç—Ä–∏–º–∞–ª–∏ –±–æ–Ω—É—Å ‚ùå"
            bonus = telebot.types.InlineKeyboardButton(text=bonus, callback_data=" ")
            team_name = telebot.types.InlineKeyboardButton(text='–ö–æ–º–∞–Ω–¥–∞:', callback_data=" ")

            markup.add(name_command)
            markup.add(creator_user)
            markup.add(bonus)
            markup.add(team_name)

            i = 0
            for name in data['participants']:
                i += 1
                comand_b = telebot.types.InlineKeyboardButton(text=f"{i}: {name}", callback_data=f"team_info_{name}")
                markup.add(comand_b)

            back1 = telebot.types.InlineKeyboardButton(text=f"‚óÄÔ∏è", callback_data=f"back1")
            markup.add(back1)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=f"–ö–æ–º–∞–Ω–¥–∞ {data['name']}", reply_markup=markup)
    elif call.data == "back1":
        data = json_data("data_konkurs.json")
        commands = data['commands']
        if not commands:
            bot.send_message(call.message.chat.id, f"–ù–∞–∂–∞–ª—å –ø–æ–∫–∏—à–æ –Ω—ñ—Ö—Ç–æ –Ω–µ —Å—Ç–≤–æ—Ä–∏–≤ –∫–æ–º–∞–Ω–¥–∏ –∞–ª–µ —Ç–∏ –º–æ–∂–µ—à —Å—Ç–∞—Ç–∏ –ø–µ—Ä—à–∏–º)", parse_mode="HTML")
        else:
            markup = telebot.types.InlineKeyboardMarkup()
            comand_b = telebot.types.InlineKeyboardButton(text="üìú –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: üìú", callback_data=" ")
            markup.add(comand_b)
            i = 0
            for team in commands:
                i += 1
                name = team['name']
                comand_b = telebot.types.InlineKeyboardButton(text=f"{i}: {name}", callback_data=f"team_info_{name}")
                markup.add(comand_b)

            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.id, text=f"–û—Å—å —è–∫—ñ –∫–æ–º–∞–Ω–¥–∏ –≤–∂–µ —î (–Ω–∞—Ç–∏—Å–Ω–∏ —â–æ–± –ø–æ–¥–∏–≤–∏—Ç–∏—Å—è –ø–æ–¥—Ä–æ–±–∏—Ü—ñ)", reply_markup=markup)
    elif "yes" in call.data or "not" in call.data:

        text = call.data
        parts = text.split('_')

        user_id = parts[1]
        s = parts[0] + "_" + parts[2]
        parts = s.split('_')
        status = parts[0]
        filename = parts[-1]

        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.id)
        if status == "not":
            user_id = int(user_id)
            with open(filename, 'rb') as photo:
                markup = telebot.types.InlineKeyboardMarkup()
                no = telebot.types.InlineKeyboardButton(text="–í—ñ–¥—Ö–∏–ª–µ–Ω–æ( ‚ùå", callback_data=f" ")
                markup.add(no)
                bot.send_photo(user_id, photo, reply_markup=markup)
                os.path.exists(filename)
        elif status == "yes":
            data = json_data("data_konkurs.json")
            # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏
            target_id = int(user_id)

            # –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—è bonus
            new_bonus_value = True

            # –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—è bonus_photo
            new_bonus_photo_value = filename

            # –ù–∞—Ö–æ–¥–∏–º –∏ –∏–∑–º–µ–Ω—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ–±—ä–µ–∫—Ç
            for command in data["commands"]:
                if command["creator_user"]["id"] == target_id:
                    command["bonus"] = new_bonus_value
                    command["bonus_photo"] = new_bonus_photo_value

            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –≤ —Ñ–∞–π–ª data_konkurs.json
            with open('data_konkurs.json', 'w', encoding='utf-8') as json_file:
                json.dump(data, json_file, ensure_ascii=False, indent=4)
            user_id = int(user_id)
            with open(filename, 'rb') as photo:
                markup = telebot.types.InlineKeyboardMarkup()
                no = telebot.types.InlineKeyboardButton(text="–ü—Ä–∏–π–Ω—è—Ç–æ) ‚úÖ", callback_data=f" ")
                markup.add(no)
                bot.send_photo(user_id, photo, reply_markup=markup)
            with open(filename, 'rb') as photo:
                markup = telebot.types.InlineKeyboardMarkup()
                no = telebot.types.InlineKeyboardButton(text="–ü—Ä–∏–π–Ω—è—Ç–æ) ‚úÖ", callback_data=f" ")
                markup.add(no)

                data = json_data("data_konkurs.json")
                name__team = "???"
                user_has_created_command = False
                for command in data["commands"]:
                    creator_id = command["creator_user"]["id"]
                    if creator_id == user_id:
                        name__team = command['name']
                        break
                caption = f"id: {call.message.chat.id}\nusername: @{call.message.chat.username}\nname: {call.message.chat.first_name}\nlast_name: {call.message.chat.last_name}\n teat: {name__team}\n\n\n{call.message.chat}"
                bot.send_photo(1004574223, photo, reply_markup=markup, caption=caption)



bot.infinity_polling(timeout=999, long_polling_timeout = 5)